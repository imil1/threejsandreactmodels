{"version":3,"file":"static/js/674.8aacc6c2.chunk.js","mappings":"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","sources":["components/Map.jsx","components/Contact.jsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n    ComposableMap,\r\n    Geographies,\r\n    Geography,\r\n    Annotation,\r\n\r\n} from 'react-simple-maps';\r\n\r\nimport features from '../assets/features.json'\r\n\r\nconst Map = () => {\r\n    return (\r\n        <ComposableMap\r\n            projection=\"geoAzimuthalEqualArea\"\r\n            projectionConfig={{\r\n                rotate: [-10.0, -52.0, 0],\r\n                center: [-5, -3],\r\n                scale: 1600,\r\n            }}\r\n            style={{ width: '100%', height: '100%' }}>\r\n            <Geographies\r\n                geography={features}\r\n                fill=\"#0d0d24\"\r\n                stroke=\"#e90000\"\r\n                strokeWidth={0.5}>\r\n                {({ geographies }) =>\r\n                    geographies.map((geo) => (\r\n                        <Geography\r\n                            key={geo.rsmKey}\r\n                            geography={geo}\r\n                        />\r\n                    ))\r\n                }\r\n            </Geographies>\r\n            <Annotation\r\n                subject={[2.3522, 48.8566]}\r\n                dx={-90}\r\n                dy={-30}\r\n                connectorProps={{\r\n                    stroke: '#fd0000',\r\n                    strokeWidth: 2,\r\n                    strokeLinecap: 'round',\r\n                }}>\r\n                <text\r\n                    x=\"-8\"\r\n                    textAnchor=\"end\"\r\n                    alignmentBaseline=\"middle\"\r\n                    fill=\"#fd0000\">\r\n                    {'We are in Paris'}\r\n                </text>\r\n            </Annotation>\r\n        </ComposableMap>\r\n    );\r\n};\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport emailjs from '@emailjs/browser';\r\n\r\nimport Map from './Map';\r\n\r\nconst Section = styled.div`\r\n    height: 100vh;\r\n    scroll-snap-align: center;\r\n`;\r\nconst Container = styled.div`\r\n    width: 100%;\r\n\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 50px;\r\n`;\r\nconst Left = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        justify-content: center;\r\n    }\r\n`;\r\nconst Right = styled.div`\r\n    flex: 1;\r\n    cursor: pointer;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        display: none;\r\n    }\r\n`;\r\nconst Title = styled.h3`\r\n    font-weight: 200;\r\n    margin-top: 100px;\r\n`;\r\nconst Form = styled.form`\r\n    width: 500px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 25px;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        width: 350px;\r\n    }\r\n`;\r\nconst Input = styled.input`\r\n    padding: 20px;\r\n    background-color: #f0f0f0;\r\n    border: none;\r\n    border-radius: 5px;\r\n`;\r\nconst TextArea = styled.textarea`\r\n    padding: 20px;\r\n    background-color: #f0f0f0;\r\n    border: none;\r\n    border-radius: 5px;\r\n`;\r\nconst Button = styled.button`\r\n    background-color: #08a858;\r\n    border: none;\r\n    cursor: pointer;\r\n    color: #fff;\r\n    font-weight: 800;\r\n    border-radius: 13px;\r\n    outline: none;\r\n    padding: 20px;\r\n`;\r\n\r\nconst Contact = () => {\r\n    const form = React.useRef(null);\r\n    const [success, setSuccess] = React.useState(null);\r\n    const [name, setName] = React.useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(name);\r\n\r\n        emailjs\r\n            .sendForm(\r\n                'service_m4srf0p',\r\n                'template_iv1qlfd',\r\n                form.current,\r\n                'A8jMqxgPTMpE-s_QW'\r\n            )\r\n            .then(\r\n                (res) => {\r\n                    console.log(res.text);\r\n                    setSuccess(true);\r\n                },\r\n                (err) => {\r\n                    console.log(err.text);\r\n                    setSuccess(false);\r\n                }\r\n            );\r\n    };\r\n    const handleInputName = (e) => {\r\n        setName(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <Section>\r\n            <Container>\r\n                <Left>\r\n                    <Form\r\n                        onSubmit={handleSubmit}\r\n                        ref={form}>\r\n                        <Title>Contact me</Title>\r\n\r\n                        <Input\r\n                            placeholder=\"Name\"\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            onChange={handleInputName}\r\n                        />\r\n\r\n                        <Input\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            onChange={(e) => e.target.value}\r\n                        />\r\n                        <TextArea\r\n                            placeholder=\"Write your message\"\r\n                            name=\"message\"\r\n                            rows={10}\r\n                            type=\"text\"\r\n                        />\r\n                        <Button type=\"submit\">Send</Button>\r\n                        {success && 'Your message has been sent'}\r\n                    </Form>\r\n                </Left>\r\n                <Right>\r\n                    <Map />\r\n                </Right>\r\n            </Container>\r\n        </Section>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["_jsxs","ComposableMap","projection","projectionConfig","rotate","center","scale","style","width","height","children","_jsx","Geographies","geography","features","fill","stroke","strokeWidth","_ref","geographies","map","geo","Geography","rsmKey","Annotation","subject","dx","dy","connectorProps","strokeLinecap","x","textAnchor","alignmentBaseline","Section","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Left","_templateObject3","Right","_templateObject4","Title","_templateObject5","Form","_templateObject6","Input","_templateObject7","TextArea","_templateObject8","Button","_templateObject9","form","React","_React$useState","_React$useState2","_slicedToArray","success","setSuccess","_React$useState3","_React$useState4","name","setName","onSubmit","e","preventDefault","console","log","emailjs","current","then","res","text","err","ref","placeholder","type","onChange","target","value","rows","Map"],"sourceRoot":""}