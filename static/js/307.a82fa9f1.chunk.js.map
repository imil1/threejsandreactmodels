{"version":3,"file":"static/js/307.a82fa9f1.chunk.js","mappings":"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","sources":["components/Cube.jsx","components/Who.jsx"],"sourcesContent":["import React from 'react';\r\nimport { PerspectiveCamera, RenderTexture, Text } from '@react-three/drei';\r\nimport { useFrame } from '@react-three/fiber';\r\n\r\nconst Cube = () => {\r\n    const textRef = React.useRef();\r\n    useFrame(\r\n        (state) =>\r\n            (textRef.current.position.x = Math.sin(state.clock.elapsedTime) * 2)\r\n    );\r\n    return (\r\n        <mesh>\r\n            <boxGeometry />\r\n            <meshStandardMaterial>\r\n                <RenderTexture attach=\"map\">\r\n                    <PerspectiveCamera\r\n                        makeDefault\r\n                        position={[0, 0, 5]}\r\n                    />\r\n                    <color\r\n                        attach=\"background\"\r\n                        args={['lightgreen']}\r\n                    />\r\n                    <Text\r\n                        ref={textRef}\r\n                        fontSize={3}\r\n                        color=\"#555\">\r\n                        hello.\r\n                    </Text>\r\n                </RenderTexture>\r\n            </meshStandardMaterial>\r\n        </mesh>\r\n    );\r\n};\r\n\r\nexport default Cube;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { OrbitControls } from '@react-three/drei';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport Cube from './Cube';\r\nimport line from '../assets/img/line.png';\r\n\r\nconst Section = styled(motion.div)`\r\n    height: 100vh;\r\n    scroll-snap-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    scroll-snap-align: center;\r\n    max-width: 1040px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        padding: 20px;\r\n    }\r\n`;\r\nconst Left = styled.div`\r\n    flex: 1;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        display: none;\r\n    }\r\n`;\r\nconst Title = styled(motion.h1)`\r\n    font-size: 64px;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        font-size: 52px;\r\n    }\r\n`;\r\nconst WhatWeDo = styled(motion.div)`\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 15px;\r\n`;\r\nconst Line = styled.img`\r\n    height: 5px;\r\n    width: 20px;\r\n`;\r\nconst Subtitle = styled.h2`\r\n    text-transform: capitalize;\r\n    color: #08a858;\r\n`;\r\nconst Desc = styled(motion.p)`\r\n    text-transform: capitalize;\r\n    font-size: 24px;\r\n    color: lightcyan;\r\n    @media only screen and (max-width: 768px) {\r\n        max-width: 250px;\r\n        width: 100%;\r\n        overflow: hidden;\r\n        display: -webkit-box;\r\n        -webkit-line-clamp: 4;\r\n        -webkit-box-orient: vertical;\r\n    }\r\n\r\n    @media only screen and (max-width: 450px) {\r\n        max-width: 250px;\r\n        width: 100%;\r\n        overflow: hidden;\r\n        display: -webkit-box;\r\n        -webkit-line-clamp: 3;\r\n        -webkit-box-orient: vertical;\r\n    }\r\n`;\r\nconst Button = styled(motion.a)`\r\n    background-color: #08a858;\r\n    color: #fff;\r\n    text-transform: capitalize;\r\n    font-size: 16px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n    max-width: 150px;\r\n    width: 100%;\r\n    padding: 10px 15px;\r\n    border: none;\r\n    border-radius: 13px;\r\n    cursor: pointer;\r\n`;\r\nconst Right = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    gap: 20px;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        align-items: center;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst textAnim = {\r\n    hidden: {\r\n        y: 100,\r\n        opacity: 0,\r\n    },\r\n    visible: (custom) => ({\r\n        y: 0,\r\n        opacity: 1,\r\n        transition: { delay: custom * 0.2 },\r\n    }),\r\n};\r\nconst titleAnim = {\r\n    hidden: {\r\n        x: -100,\r\n        opacity: 0,\r\n    },\r\n    visible: (custom) => ({\r\n        x: 0,\r\n        opacity: 1,\r\n        transition: { delay: custom * 0.2 },\r\n    }),\r\n};\r\n\r\nconst Who = React.memo(() => {\r\n    return (\r\n        <Section\r\n            initial=\"hidden\"\r\n            whileInView=\"visible\"\r\n            viewport={{ amount: 0.3, once: true }}>\r\n            <Container>\r\n                <Left>\r\n                    <Canvas camera={{ fov: 25, position: [5, 5, 5] }}>\r\n                        <OrbitControls enableZoom={false} />\r\n                        <ambientLight intensity={1} />\r\n                        <directionalLight position={[3, 2, 1]} />\r\n                        <Cube />\r\n                    </Canvas>\r\n                </Left>\r\n                <Right>\r\n                    <Title\r\n                        variants={titleAnim}\r\n                        custom={2}\r\n                        transition={{\r\n                            type: 'spring',\r\n                            stiffness: 700,\r\n                            damping: 30,\r\n                        }}>\r\n                        three.js\r\n                    </Title>\r\n                    <WhatWeDo\r\n                        variants={textAnim}\r\n                        custom={2}\r\n                        transition={{\r\n                            type: 'spring',\r\n                            stiffness: 700,\r\n                            damping: 30,\r\n                        }}>\r\n                        <Line src={line} />\r\n                        <Subtitle>3d models </Subtitle>\r\n                    </WhatWeDo>\r\n                    <Desc\r\n                        variants={textAnim}\r\n                        custom={1}\r\n                        transition={{\r\n                            type: 'spring',\r\n                            stiffness: 700,\r\n                            damping: 30,\r\n                        }}>\r\n                        is a cross-browser JS library and (API) used to create\r\n                        and display animated 3D computer graphics in a web\r\n                        browser using WebGL.\r\n                    </Desc>\r\n                    <Button\r\n                        target={'blank'}\r\n                        href=\"https://threejs.org/docs/index.html#manual/en/introduction/Creating-a-scene\"\r\n                        variants={textAnim}\r\n                        custom={1}\r\n                        transition={{\r\n                            type: 'tween',\r\n                        }}>\r\n                        See our works\r\n                    </Button>\r\n                </Right>\r\n            </Container>\r\n        </Section>\r\n    );\r\n});\r\n\r\nexport default Who;\r\n"],"names":["textRef","React","useFrame","state","current","position","x","Math","sin","clock","elapsedTime","_jsxs","children","_jsx","RenderTexture","attach","PerspectiveCamera","makeDefault","args","Text","ref","fontSize","color","Section","styled","motion","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","Left","_templateObject3","Title","_templateObject4","WhatWeDo","_templateObject5","Line","_templateObject6","Subtitle","_templateObject7","Desc","_templateObject8","Button","_templateObject9","Right","_templateObject10","textAnim","hidden","y","opacity","visible","custom","transition","delay","titleAnim","initial","whileInView","viewport","amount","once","Canvas","camera","fov","OrbitControls","enableZoom","intensity","Cube","variants","type","stiffness","damping","src","line","target","href"],"sourceRoot":""}